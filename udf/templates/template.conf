hostname = "localhost"
data_dir = "/home/vagrant/var/${module}/data/"

[http]
  bind-address = ":9092"
  auth-enabled = false
  log-enabled = true
  write-tracing = false
  pprof-enabled = false
  https-enabled = false
  https-certificate = "/etc/ssl/kapacitor.pem"
  shutdown-timeout = "10s"
  shared-secret = ""

[replay]
  dir = "/home/vagrant/var/${module}/replay"

[storage]
  boltdb = "/home/vagrant/var/${module}/kapacitor.db"

[task]
  dir = "/home/vagrant/var/${module}/tasks"
  snapshot-interval = "1m0s"

[[influxdb]]
  enabled = true
  name = "localhost"
  default = true
  urls = ["http://localhost:8086"]
  username = ""
  password = ""
  ssl-ca = ""
  ssl-cert = ""
  ssl-key = ""
  insecure-skip-verify = false
  timeout = "0"
  disable-subscriptions = false
  subscription-protocol = "http"
  kapacitor-hostname = ""
  http-port = 0
  udp-bind = ""
  udp-buffer = 1000
  udp-read-buffer = 0
  startup-timeout = "5m0s"
  subscriptions-sync-interval = "1m0s"
  [influxdb.subscriptions]
  [influxdb.excluded-subscriptions]
    _kapacitor = ["autogen"]

[logging]
  file = "/home/vagrant/var/${module}/kapacitor.log"
  level = "INFO"

[collectd]
  enabled = false
  bind-address = ":25826"
  database = "collectd"
  retention-policy = ""
  batch-size = 1000
  batch-pending = 5
  batch-timeout = "10s"
  read-buffer = 0
  typesdb = "/usr/share/collectd/types.db"

[opentsdb]
  enabled = false
  bind-address = ":4242"
  database = "opentsdb"
  retention-policy = ""
  consistency-level = "one"
  tls-enabled = false
  certificate = "/etc/ssl/influxdb.pem"
  batch-size = 1000
  batch-pending = 5
  batch-timeout = "1s"
  log-point-errors = true

[smtp]
  enabled = false
  host = "localhost"
  port = 25
  username = ""
  password = ""
  no-verify = false
  global = false
  state-changes-only = false
  from = ""
  idle-timeout = "30s"

[opsgenie]
  enabled = false
  api-key = ""
  url = "https://api.opsgenie.com/v1/json/alert"
  recovery_url = "https://api.opsgenie.com/v1/json/alert/note"
  global = false

[victorops]
  enabled = false
  api-key = ""
  routing-key = ""
  url = "https://alert.victorops.com/integrations/generic/20131114/alert"
  global = false

[pagerduty]
  enabled = false
  url = "https://events.pagerduty.com/generic/2010-04-15/create_event.json"
  service-key = ""
  global = false

[sensu]
  enabled = false
  addr = "sensu-client:3030"
  source = "Kapacitor"

[slack]
  enabled = false
  url = ""
  channel = ""
  global = false
  state-changes-only = false

[telegram]
  enabled = false
  url = "https://api.telegram.org/bot"
  token = ""
  chat-id = ""
  parse-mode = ""
  disable-web-page-preview = false
  disable-notification = false
  global = false
  state-changes-only = false

[hipchat]
  enabled = false
  url = "https://subdomain.hipchat.com/v2/room"
  token = ""
  room = ""
  global = false
  state-changes-only = false

[alerta]
  enabled = false
  url = ""
  token = ""
  environment = ""
  origin = "kapacitor"

[reporting]
  enabled = true
  url = "https://usage.influxdata.com"

[stats]
  enabled = true
  stats-interval = "10s"
  database = "_kapacitor"
  retention-policy = "autogen"
  timing-sample-rate = 0.1
  timing-movavg-size = 1000

[udf]
  [udf.functions]
       [udf.functions.${module}]
        # Run python
        prog = "/home/vagrant/anaconda2/bin/python"
        # Pass args to python
        # -u for unbuffered STDIN and STDOUT
        # and the path to the script
        args = ["-u", "/vagrant/udf/agent/examples/${module}/${module}.py"]
        # If the python process is unresponsive for 10s kill it
        timeout = "10s"
        # Define env vars for the process, in this case the PYTHONPATH
        [udf.functions.${module}.env]
            PYTHONPATH = "/vagrant/udf/agent/py/kapacitor/udf"

[deadman]
  interval = "10s"
  threshold = 0.0
  id = "node 'NODE_NAME' in task '{{ .TaskName }}'"
  message = "{{ .ID }} is {{ if eq .Level \"OK\" }}alive{{ else }}dead{{ end }}: {{ index .Fields \"collected\" | printf \"%0.3f\" }} points/INTERVAL."
  global = false

[talk]
  enabled = false
  url = "https://jianliao.com/v2/services/webhook/uuid"
  author_name = "Kapacitor"